package can

/*
Pkg
CAN数据帧标准格式
.----------------------------------------------------------------------------------------------------------
|域段		|域段名								|位宽:bit		|描述
|帧起始		|SOF（Start Of Frame）				|1				|数据帧起始标志，固定为1bit显性（'b0）
|仲裁段		|Identify（ID）						|11				|本数据帧的 ID 信息， ID 信息的作用：① 如果同时有多个节点发送数据时，作为优先级依据（仲裁机制）；② 目标节点通过 ID 信息来接受数据（验收滤波技术）
|RTR		|Remote Transmission Request BIT	|1				|RTR标识是否是远程帧（0，数据帧；1，远程帧），在数据帧里这一位为显性('b0)
|IDE		|Identifier Extension Bit			|1				|IDE用于区分标准格式与扩展格式，在标准格式中 IDE 位为显性（‘b0），在扩展格式里 IDE 位为隐性（’b1）
|R0			|保留位								|1				|1bit保留位，固定为1'b0
|DLC		|data length						|4				|由 4 位组成，MSB 先行（高位先行），它的二进制编码用于表示本报文中的数据段含有多少个字节，DLC 段表示的数字为0到8，若接收方接收到 9~15 的时候并不认为是错误
|数据段		|data								|0~64			|据帧的核心内容，它由 0~8 个字节(0 ~ 64位)组成，MSB 先行
|CRC段		|CRC								|15				|段用于检查帧传输错误，发送方以一定的方法计算包括：帧起始、仲裁段、控制段、数据段；接收方以同样的算法计算 CRC 值并进行比较，如果不同则会向发送端反馈出错信息，重新发送；计算和出错处理一般由 CAN 控制器硬件完成或由软件控制最大重发数。
|CRC界定符	|									|1				|CRC 界定符（用于分隔的位），为隐性位(1'b1)，主要作用是把CRC 校验码与后面的 ACK 段间隔起来
|ACK 槽		|ACK slot							|1				|在 ACK 槽位中，发送端发送的为隐性位，而接收端则在这一位中发送显性位以示应答；发送 ACK/返回 ACK这个过程使用到回读机制，即发送方先在 ACK 槽发送隐性位后，回读到的总线上的电平为显性0，发送方才知道它发送成功了，不用重发
|ACK界定符	|									|1				|在 ACK 槽和帧结束之间由 ACK 界定符间隔开，为隐性位
|帧结束		|EOF								|7				|由发送端发送 7 个隐性位表示结束
^----------------------------------------------------------------------------------------------------------
*/
type Pkg struct {
}
